import { Commands } from '../schema/common';
import { TSendCommand } from '../schema/types';
import { SetActivity } from './setActivity';
export { Commands, SetActivity };
declare function commands(sendCommand: TSendCommand): {
    authenticate: (args: {
        access_token?: string | null | undefined;
    }) => Promise<{
        access_token: string;
        user: {
            username: string;
            discriminator: string;
            id: string;
            public_flags: number;
            avatar?: string | null | undefined;
            global_name?: string | null | undefined;
        };
        scopes: (-1 | "identify" | "email" | "connections" | "guilds" | "guilds.join" | "guilds.members.read" | "gdm.join" | "bot" | "rpc" | "rpc.notifications.read" | "rpc.voice.read" | "rpc.voice.write" | "rpc.video.read" | "rpc.video.write" | "rpc.screenshare.read" | "rpc.screenshare.write" | "rpc.activities.write" | "webhook.incoming" | "messages.read" | "applications.builds.upload" | "applications.builds.read" | "applications.commands" | "applications.commands.permissions.update" | "applications.commands.update" | "applications.store.update" | "applications.entitlements" | "activities.read" | "activities.write" | "relationships.read" | "relationships.write" | "voice" | "dm_channels.read" | "role_connections.write" | "presences.read" | "presences.write" | "openid" | "dm_channels.messages.read" | "dm_channels.messages.write" | "gateway.connect" | "account.global_name.update" | "payment_sources.country_code")[];
        expires: string;
        application: {
            id: string;
            description: string;
            name: string;
            icon?: string | null | undefined;
            rpc_origins?: string[] | undefined;
        };
    }>;
    authorize: (args: import("./authorize").AuthorizeInput) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        code: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        code: string;
    }, {
        code: string;
    }>>>;
    captureLog: (args: import("./captureLog").CaptureLogInput) => Promise<import("zod").TypeOf<import("zod").ZodNullable<import("zod").ZodObject<{}, "strip", import("zod").ZodTypeAny, {}, {}>>>>;
    encourageHardwareAcceleration: (args: void) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        enabled: import("zod").ZodBoolean;
    }, "strip", import("zod").ZodTypeAny, {
        enabled: boolean;
    }, {
        enabled: boolean;
    }>>>;
    getChannel: (args: import("./getChannel").GetChannelInput) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        id: import("zod").ZodString;
        type: import("zod").ZodEffects<import("zod").ZodType<0 | 10 | 1 | 4 | 3 | -1 | 2 | 5 | 6 | 11 | 12 | 13 | 14 | 15, import("zod").ZodTypeDef, 0 | 10 | 1 | 4 | 3 | -1 | 2 | 5 | 6 | 11 | 12 | 13 | 14 | 15>, 0 | 10 | 1 | 4 | 3 | -1 | 2 | 5 | 6 | 11 | 12 | 13 | 14 | 15, unknown>;
        guild_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        topic: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        bitrate: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
        user_limit: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
        position: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
        voice_states: import("zod").ZodArray<import("zod").ZodObject<{
            mute: import("zod").ZodBoolean;
            nick: import("zod").ZodString;
            user: import("zod").ZodObject<{
                id: import("zod").ZodString;
                username: import("zod").ZodString;
                discriminator: import("zod").ZodString;
                global_name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar_decoration_data: import("zod").ZodNullable<import("zod").ZodObject<{
                    asset: import("zod").ZodString;
                    sku_id: import("zod").ZodOptional<import("zod").ZodString>;
                }, "strip", import("zod").ZodTypeAny, {
                    asset: string;
                    sku_id?: string | undefined;
                }, {
                    asset: string;
                    sku_id?: string | undefined;
                }>>;
                bot: import("zod").ZodBoolean;
                flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                premium_type: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
            }, "strip", import("zod").ZodTypeAny, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }>;
            voice_state: import("zod").ZodObject<{
                mute: import("zod").ZodBoolean;
                deaf: import("zod").ZodBoolean;
                self_mute: import("zod").ZodBoolean;
                self_deaf: import("zod").ZodBoolean;
                suppress: import("zod").ZodBoolean;
            }, "strip", import("zod").ZodTypeAny, {
                deaf: boolean;
                mute: boolean;
                self_mute: boolean;
                self_deaf: boolean;
                suppress: boolean;
            }, {
                deaf: boolean;
                mute: boolean;
                self_mute: boolean;
                self_deaf: boolean;
                suppress: boolean;
            }>;
            volume: import("zod").ZodNumber;
        }, "strip", import("zod").ZodTypeAny, {
            user: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            };
            nick: string;
            mute: boolean;
            voice_state: {
                deaf: boolean;
                mute: boolean;
                self_mute: boolean;
                self_deaf: boolean;
                suppress: boolean;
            };
            volume: number;
        }, {
            user: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            };
            nick: string;
            mute: boolean;
            voice_state: {
                deaf: boolean;
                mute: boolean;
                self_mute: boolean;
                self_deaf: boolean;
                suppress: boolean;
            };
            volume: number;
        }>, "many">;
        messages: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodString;
            channel_id: import("zod").ZodString;
            guild_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            author: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                id: import("zod").ZodString;
                username: import("zod").ZodString;
                discriminator: import("zod").ZodString;
                global_name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar_decoration_data: import("zod").ZodNullable<import("zod").ZodObject<{
                    asset: import("zod").ZodString;
                    sku_id: import("zod").ZodOptional<import("zod").ZodString>;
                }, "strip", import("zod").ZodTypeAny, {
                    asset: string;
                    sku_id?: string | undefined;
                }, {
                    asset: string;
                    sku_id?: string | undefined;
                }>>;
                bot: import("zod").ZodBoolean;
                flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                premium_type: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
            }, "strip", import("zod").ZodTypeAny, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }>>>;
            member: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                user: import("zod").ZodObject<{
                    id: import("zod").ZodString;
                    username: import("zod").ZodString;
                    discriminator: import("zod").ZodString;
                    global_name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    avatar: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    avatar_decoration_data: import("zod").ZodNullable<import("zod").ZodObject<{
                        asset: import("zod").ZodString;
                        sku_id: import("zod").ZodOptional<import("zod").ZodString>;
                    }, "strip", import("zod").ZodTypeAny, {
                        asset: string;
                        sku_id?: string | undefined;
                    }, {
                        asset: string;
                        sku_id?: string | undefined;
                    }>>;
                    bot: import("zod").ZodBoolean;
                    flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                    premium_type: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                }, "strip", import("zod").ZodTypeAny, {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                }, {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                }>;
                nick: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                roles: import("zod").ZodArray<import("zod").ZodString, "many">;
                joined_at: import("zod").ZodString;
                deaf: import("zod").ZodBoolean;
                mute: import("zod").ZodBoolean;
            }, "strip", import("zod").ZodTypeAny, {
                user: {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                };
                roles: string[];
                joined_at: string;
                deaf: boolean;
                mute: boolean;
                nick?: string | null | undefined;
            }, {
                user: {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                };
                roles: string[];
                joined_at: string;
                deaf: boolean;
                mute: boolean;
                nick?: string | null | undefined;
            }>>>;
            content: import("zod").ZodString;
            timestamp: import("zod").ZodString;
            edited_timestamp: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            tts: import("zod").ZodBoolean;
            mention_everyone: import("zod").ZodBoolean;
            mentions: import("zod").ZodArray<import("zod").ZodObject<{
                id: import("zod").ZodString;
                username: import("zod").ZodString;
                discriminator: import("zod").ZodString;
                global_name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar_decoration_data: import("zod").ZodNullable<import("zod").ZodObject<{
                    asset: import("zod").ZodString;
                    sku_id: import("zod").ZodOptional<import("zod").ZodString>;
                }, "strip", import("zod").ZodTypeAny, {
                    asset: string;
                    sku_id?: string | undefined;
                }, {
                    asset: string;
                    sku_id?: string | undefined;
                }>>;
                bot: import("zod").ZodBoolean;
                flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                premium_type: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
            }, "strip", import("zod").ZodTypeAny, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }>, "many">;
            mention_roles: import("zod").ZodArray<import("zod").ZodString, "many">;
            mention_channels: import("zod").ZodArray<import("zod").ZodObject<{
                id: import("zod").ZodString;
                guild_id: import("zod").ZodString;
                type: import("zod").ZodNumber;
                name: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                type: number;
                id: string;
                name: string;
                guild_id: string;
            }, {
                type: number;
                id: string;
                name: string;
                guild_id: string;
            }>, "many">;
            attachments: import("zod").ZodArray<import("zod").ZodObject<{
                id: import("zod").ZodString;
                filename: import("zod").ZodString;
                size: import("zod").ZodNumber;
                url: import("zod").ZodString;
                proxy_url: import("zod").ZodString;
                height: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                width: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
            }, "strip", import("zod").ZodTypeAny, {
                id: string;
                url: string;
                size: number;
                filename: string;
                proxy_url: string;
                height?: number | null | undefined;
                width?: number | null | undefined;
            }, {
                id: string;
                url: string;
                size: number;
                filename: string;
                proxy_url: string;
                height?: number | null | undefined;
                width?: number | null | undefined;
            }>, "many">;
            embeds: import("zod").ZodArray<import("zod").ZodObject<{
                title: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                type: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                description: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                timestamp: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                color: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                footer: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                    text: import("zod").ZodString;
                    icon_url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    proxy_icon_url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                }, "strip", import("zod").ZodTypeAny, {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                }, {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                }>>>;
                image: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                    url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    proxy_url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    height: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                    width: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                }, "strip", import("zod").ZodTypeAny, {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                }, {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                }>>>;
                thumbnail: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                    url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    proxy_url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    height: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                    width: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                }, "strip", import("zod").ZodTypeAny, {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                }, {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                }>>>;
                video: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<Omit<{
                    url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    proxy_url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    height: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                    width: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                }, "proxy_url">, "strip", import("zod").ZodTypeAny, {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                }, {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                }>>>;
                provider: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                    name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                }, "strip", import("zod").ZodTypeAny, {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                }, {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                }>>>;
                author: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                    name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    icon_url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    proxy_icon_url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                }, "strip", import("zod").ZodTypeAny, {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                }, {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                }>>>;
                fields: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
                    name: import("zod").ZodString;
                    value: import("zod").ZodString;
                    inline: import("zod").ZodBoolean;
                }, "strip", import("zod").ZodTypeAny, {
                    value: string;
                    name: string;
                    inline: boolean;
                }, {
                    value: string;
                    name: string;
                    inline: boolean;
                }>, "many">>>;
            }, "strip", import("zod").ZodTypeAny, {
                type?: string | null | undefined;
                description?: string | null | undefined;
                url?: string | null | undefined;
                color?: number | null | undefined;
                title?: string | null | undefined;
                timestamp?: string | null | undefined;
                footer?: {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                image?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                thumbnail?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                video?: {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                provider?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                } | null | undefined;
                author?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                fields?: {
                    value: string;
                    name: string;
                    inline: boolean;
                }[] | null | undefined;
            }, {
                type?: string | null | undefined;
                description?: string | null | undefined;
                url?: string | null | undefined;
                color?: number | null | undefined;
                title?: string | null | undefined;
                timestamp?: string | null | undefined;
                footer?: {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                image?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                thumbnail?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                video?: {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                provider?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                } | null | undefined;
                author?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                fields?: {
                    value: string;
                    name: string;
                    inline: boolean;
                }[] | null | undefined;
            }>, "many">;
            reactions: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
                count: import("zod").ZodNumber;
                me: import("zod").ZodBoolean;
                emoji: import("zod").ZodObject<{
                    id: import("zod").ZodString;
                    name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                    roles: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>>;
                    user: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                        id: import("zod").ZodString;
                        username: import("zod").ZodString;
                        discriminator: import("zod").ZodString;
                        global_name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                        avatar: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                        avatar_decoration_data: import("zod").ZodNullable<import("zod").ZodObject<{
                            asset: import("zod").ZodString;
                            sku_id: import("zod").ZodOptional<import("zod").ZodString>;
                        }, "strip", import("zod").ZodTypeAny, {
                            asset: string;
                            sku_id?: string | undefined;
                        }, {
                            asset: string;
                            sku_id?: string | undefined;
                        }>>;
                        bot: import("zod").ZodBoolean;
                        flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                        premium_type: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                    }, "strip", import("zod").ZodTypeAny, {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    }, {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    }>>>;
                    require_colons: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
                    managed: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
                    animated: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
                    available: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
                }, "strip", import("zod").ZodTypeAny, {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                }, {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                }>;
            }, "strip", import("zod").ZodTypeAny, {
                emoji: {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                };
                count: number;
                me: boolean;
            }, {
                emoji: {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                };
                count: number;
                me: boolean;
            }>, "many">>>;
            nonce: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodNumber]>>>;
            pinned: import("zod").ZodBoolean;
            webhook_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            type: import("zod").ZodNumber;
            activity: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                type: import("zod").ZodNumber;
                party_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            }, "strip", import("zod").ZodTypeAny, {
                type: number;
                party_id?: string | null | undefined;
            }, {
                type: number;
                party_id?: string | null | undefined;
            }>>>;
            application: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                id: import("zod").ZodString;
                cover_image: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                description: import("zod").ZodString;
                icon: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                name: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                id: string;
                description: string;
                name: string;
                icon?: string | null | undefined;
                cover_image?: string | null | undefined;
            }, {
                id: string;
                description: string;
                name: string;
                icon?: string | null | undefined;
                cover_image?: string | null | undefined;
            }>>>;
            message_reference: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                message_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                channel_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                guild_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            }, "strip", import("zod").ZodTypeAny, {
                guild_id?: string | null | undefined;
                message_id?: string | null | undefined;
                channel_id?: string | null | undefined;
            }, {
                guild_id?: string | null | undefined;
                message_id?: string | null | undefined;
                channel_id?: string | null | undefined;
            }>>>;
            flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
            stickers: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodUnknown, "many">>>;
            referenced_message: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodUnknown>>;
        }, "strip", import("zod").ZodTypeAny, {
            type: number;
            id: string;
            timestamp: string;
            channel_id: string;
            content: string;
            tts: boolean;
            mention_everyone: boolean;
            mentions: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }[];
            mention_roles: string[];
            mention_channels: {
                type: number;
                id: string;
                name: string;
                guild_id: string;
            }[];
            attachments: {
                id: string;
                url: string;
                size: number;
                filename: string;
                proxy_url: string;
                height?: number | null | undefined;
                width?: number | null | undefined;
            }[];
            embeds: {
                type?: string | null | undefined;
                description?: string | null | undefined;
                url?: string | null | undefined;
                color?: number | null | undefined;
                title?: string | null | undefined;
                timestamp?: string | null | undefined;
                footer?: {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                image?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                thumbnail?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                video?: {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                provider?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                } | null | undefined;
                author?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                fields?: {
                    value: string;
                    name: string;
                    inline: boolean;
                }[] | null | undefined;
            }[];
            pinned: boolean;
            application?: {
                id: string;
                description: string;
                name: string;
                icon?: string | null | undefined;
                cover_image?: string | null | undefined;
            } | null | undefined;
            flags?: number | null | undefined;
            nonce?: string | number | null | undefined;
            guild_id?: string | null | undefined;
            author?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            member?: {
                user: {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                };
                roles: string[];
                joined_at: string;
                deaf: boolean;
                mute: boolean;
                nick?: string | null | undefined;
            } | null | undefined;
            edited_timestamp?: string | null | undefined;
            reactions?: {
                emoji: {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                };
                count: number;
                me: boolean;
            }[] | null | undefined;
            webhook_id?: string | null | undefined;
            activity?: {
                type: number;
                party_id?: string | null | undefined;
            } | null | undefined;
            message_reference?: {
                guild_id?: string | null | undefined;
                message_id?: string | null | undefined;
                channel_id?: string | null | undefined;
            } | null | undefined;
            stickers?: unknown[] | null | undefined;
            referenced_message?: unknown;
        }, {
            type: number;
            id: string;
            timestamp: string;
            channel_id: string;
            content: string;
            tts: boolean;
            mention_everyone: boolean;
            mentions: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }[];
            mention_roles: string[];
            mention_channels: {
                type: number;
                id: string;
                name: string;
                guild_id: string;
            }[];
            attachments: {
                id: string;
                url: string;
                size: number;
                filename: string;
                proxy_url: string;
                height?: number | null | undefined;
                width?: number | null | undefined;
            }[];
            embeds: {
                type?: string | null | undefined;
                description?: string | null | undefined;
                url?: string | null | undefined;
                color?: number | null | undefined;
                title?: string | null | undefined;
                timestamp?: string | null | undefined;
                footer?: {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                image?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                thumbnail?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                video?: {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                provider?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                } | null | undefined;
                author?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                fields?: {
                    value: string;
                    name: string;
                    inline: boolean;
                }[] | null | undefined;
            }[];
            pinned: boolean;
            application?: {
                id: string;
                description: string;
                name: string;
                icon?: string | null | undefined;
                cover_image?: string | null | undefined;
            } | null | undefined;
            flags?: number | null | undefined;
            nonce?: string | number | null | undefined;
            guild_id?: string | null | undefined;
            author?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            member?: {
                user: {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                };
                roles: string[];
                joined_at: string;
                deaf: boolean;
                mute: boolean;
                nick?: string | null | undefined;
            } | null | undefined;
            edited_timestamp?: string | null | undefined;
            reactions?: {
                emoji: {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                };
                count: number;
                me: boolean;
            }[] | null | undefined;
            webhook_id?: string | null | undefined;
            activity?: {
                type: number;
                party_id?: string | null | undefined;
            } | null | undefined;
            message_reference?: {
                guild_id?: string | null | undefined;
                message_id?: string | null | undefined;
                channel_id?: string | null | undefined;
            } | null | undefined;
            stickers?: unknown[] | null | undefined;
            referenced_message?: unknown;
        }>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        type: 0 | 10 | 1 | 4 | 3 | -1 | 2 | 5 | 6 | 11 | 12 | 13 | 14 | 15;
        id: string;
        voice_states: {
            user: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            };
            nick: string;
            mute: boolean;
            voice_state: {
                deaf: boolean;
                mute: boolean;
                self_mute: boolean;
                self_deaf: boolean;
                suppress: boolean;
            };
            volume: number;
        }[];
        messages: {
            type: number;
            id: string;
            timestamp: string;
            channel_id: string;
            content: string;
            tts: boolean;
            mention_everyone: boolean;
            mentions: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }[];
            mention_roles: string[];
            mention_channels: {
                type: number;
                id: string;
                name: string;
                guild_id: string;
            }[];
            attachments: {
                id: string;
                url: string;
                size: number;
                filename: string;
                proxy_url: string;
                height?: number | null | undefined;
                width?: number | null | undefined;
            }[];
            embeds: {
                type?: string | null | undefined;
                description?: string | null | undefined;
                url?: string | null | undefined;
                color?: number | null | undefined;
                title?: string | null | undefined;
                timestamp?: string | null | undefined;
                footer?: {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                image?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                thumbnail?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                video?: {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                provider?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                } | null | undefined;
                author?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                fields?: {
                    value: string;
                    name: string;
                    inline: boolean;
                }[] | null | undefined;
            }[];
            pinned: boolean;
            application?: {
                id: string;
                description: string;
                name: string;
                icon?: string | null | undefined;
                cover_image?: string | null | undefined;
            } | null | undefined;
            flags?: number | null | undefined;
            nonce?: string | number | null | undefined;
            guild_id?: string | null | undefined;
            author?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            member?: {
                user: {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                };
                roles: string[];
                joined_at: string;
                deaf: boolean;
                mute: boolean;
                nick?: string | null | undefined;
            } | null | undefined;
            edited_timestamp?: string | null | undefined;
            reactions?: {
                emoji: {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                };
                count: number;
                me: boolean;
            }[] | null | undefined;
            webhook_id?: string | null | undefined;
            activity?: {
                type: number;
                party_id?: string | null | undefined;
            } | null | undefined;
            message_reference?: {
                guild_id?: string | null | undefined;
                message_id?: string | null | undefined;
                channel_id?: string | null | undefined;
            } | null | undefined;
            stickers?: unknown[] | null | undefined;
            referenced_message?: unknown;
        }[];
        name?: string | null | undefined;
        guild_id?: string | null | undefined;
        position?: number | null | undefined;
        topic?: string | null | undefined;
        bitrate?: number | null | undefined;
        user_limit?: number | null | undefined;
    }, {
        id: string;
        voice_states: {
            user: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            };
            nick: string;
            mute: boolean;
            voice_state: {
                deaf: boolean;
                mute: boolean;
                self_mute: boolean;
                self_deaf: boolean;
                suppress: boolean;
            };
            volume: number;
        }[];
        messages: {
            type: number;
            id: string;
            timestamp: string;
            channel_id: string;
            content: string;
            tts: boolean;
            mention_everyone: boolean;
            mentions: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }[];
            mention_roles: string[];
            mention_channels: {
                type: number;
                id: string;
                name: string;
                guild_id: string;
            }[];
            attachments: {
                id: string;
                url: string;
                size: number;
                filename: string;
                proxy_url: string;
                height?: number | null | undefined;
                width?: number | null | undefined;
            }[];
            embeds: {
                type?: string | null | undefined;
                description?: string | null | undefined;
                url?: string | null | undefined;
                color?: number | null | undefined;
                title?: string | null | undefined;
                timestamp?: string | null | undefined;
                footer?: {
                    text: string;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                image?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                thumbnail?: {
                    url?: string | null | undefined;
                    proxy_url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                video?: {
                    url?: string | null | undefined;
                    height?: number | null | undefined;
                    width?: number | null | undefined;
                } | null | undefined;
                provider?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                } | null | undefined;
                author?: {
                    name?: string | null | undefined;
                    url?: string | null | undefined;
                    icon_url?: string | null | undefined;
                    proxy_icon_url?: string | null | undefined;
                } | null | undefined;
                fields?: {
                    value: string;
                    name: string;
                    inline: boolean;
                }[] | null | undefined;
            }[];
            pinned: boolean;
            application?: {
                id: string;
                description: string;
                name: string;
                icon?: string | null | undefined;
                cover_image?: string | null | undefined;
            } | null | undefined;
            flags?: number | null | undefined;
            nonce?: string | number | null | undefined;
            guild_id?: string | null | undefined;
            author?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            member?: {
                user: {
                    username: string;
                    discriminator: string;
                    id: string;
                    bot: boolean;
                    avatar_decoration_data: {
                        asset: string;
                        sku_id?: string | undefined;
                    } | null;
                    avatar?: string | null | undefined;
                    global_name?: string | null | undefined;
                    flags?: number | null | undefined;
                    premium_type?: number | null | undefined;
                };
                roles: string[];
                joined_at: string;
                deaf: boolean;
                mute: boolean;
                nick?: string | null | undefined;
            } | null | undefined;
            edited_timestamp?: string | null | undefined;
            reactions?: {
                emoji: {
                    id: string;
                    user?: {
                        username: string;
                        discriminator: string;
                        id: string;
                        bot: boolean;
                        avatar_decoration_data: {
                            asset: string;
                            sku_id?: string | undefined;
                        } | null;
                        avatar?: string | null | undefined;
                        global_name?: string | null | undefined;
                        flags?: number | null | undefined;
                        premium_type?: number | null | undefined;
                    } | null | undefined;
                    name?: string | null | undefined;
                    roles?: string[] | null | undefined;
                    require_colons?: boolean | null | undefined;
                    managed?: boolean | null | undefined;
                    animated?: boolean | null | undefined;
                    available?: boolean | null | undefined;
                };
                count: number;
                me: boolean;
            }[] | null | undefined;
            webhook_id?: string | null | undefined;
            activity?: {
                type: number;
                party_id?: string | null | undefined;
            } | null | undefined;
            message_reference?: {
                guild_id?: string | null | undefined;
                message_id?: string | null | undefined;
                channel_id?: string | null | undefined;
            } | null | undefined;
            stickers?: unknown[] | null | undefined;
            referenced_message?: unknown;
        }[];
        type?: unknown;
        name?: string | null | undefined;
        guild_id?: string | null | undefined;
        position?: number | null | undefined;
        topic?: string | null | undefined;
        bitrate?: number | null | undefined;
        user_limit?: number | null | undefined;
    }>>>;
    getChannelPermissions: (args: void) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        permissions: import("zod").ZodUnion<[import("zod").ZodBigInt, import("zod").ZodString]>;
    }, "strip", import("zod").ZodTypeAny, {
        permissions: string | bigint;
    }, {
        permissions: string | bigint;
    }>>>;
    getEntitlements: (args: void) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        entitlements: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodString;
            sku_id: import("zod").ZodString;
            application_id: import("zod").ZodString;
            user_id: import("zod").ZodString;
            gift_code_flags: import("zod").ZodNumber;
            type: import("zod").ZodEffects<import("zod").ZodType<1 | 4 | 3 | -1 | 2 | 5 | 6 | 7, import("zod").ZodTypeDef, 1 | 4 | 3 | -1 | 2 | 5 | 6 | 7>, 1 | 4 | 3 | -1 | 2 | 5 | 6 | 7, unknown>;
            gifter_user_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            branches: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>>;
            starts_at: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            ends_at: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            parent_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            consumed: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
            deleted: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
            gift_code_batch_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        }, "strip", import("zod").ZodTypeAny, {
            type: 1 | 4 | 3 | -1 | 2 | 5 | 6 | 7;
            id: string;
            sku_id: string;
            user_id: string;
            application_id: string;
            gift_code_flags: number;
            parent_id?: string | null | undefined;
            gifter_user_id?: string | null | undefined;
            branches?: string[] | null | undefined;
            starts_at?: string | null | undefined;
            ends_at?: string | null | undefined;
            consumed?: boolean | null | undefined;
            deleted?: boolean | null | undefined;
            gift_code_batch_id?: string | null | undefined;
        }, {
            id: string;
            sku_id: string;
            user_id: string;
            application_id: string;
            gift_code_flags: number;
            type?: unknown;
            parent_id?: string | null | undefined;
            gifter_user_id?: string | null | undefined;
            branches?: string[] | null | undefined;
            starts_at?: string | null | undefined;
            ends_at?: string | null | undefined;
            consumed?: boolean | null | undefined;
            deleted?: boolean | null | undefined;
            gift_code_batch_id?: string | null | undefined;
        }>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        entitlements: {
            type: 1 | 4 | 3 | -1 | 2 | 5 | 6 | 7;
            id: string;
            sku_id: string;
            user_id: string;
            application_id: string;
            gift_code_flags: number;
            parent_id?: string | null | undefined;
            gifter_user_id?: string | null | undefined;
            branches?: string[] | null | undefined;
            starts_at?: string | null | undefined;
            ends_at?: string | null | undefined;
            consumed?: boolean | null | undefined;
            deleted?: boolean | null | undefined;
            gift_code_batch_id?: string | null | undefined;
        }[];
    }, {
        entitlements: {
            id: string;
            sku_id: string;
            user_id: string;
            application_id: string;
            gift_code_flags: number;
            type?: unknown;
            parent_id?: string | null | undefined;
            gifter_user_id?: string | null | undefined;
            branches?: string[] | null | undefined;
            starts_at?: string | null | undefined;
            ends_at?: string | null | undefined;
            consumed?: boolean | null | undefined;
            deleted?: boolean | null | undefined;
            gift_code_batch_id?: string | null | undefined;
        }[];
    }>>>;
    getPlatformBehaviors: (args: void) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        iosKeyboardResizesView: import("zod").ZodOptional<import("zod").ZodBoolean>;
    }, "strip", import("zod").ZodTypeAny, {
        iosKeyboardResizesView?: boolean | undefined;
    }, {
        iosKeyboardResizesView?: boolean | undefined;
    }>>>;
    getSkus: (args: void) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        skus: import("zod").ZodArray<import("zod").ZodObject<{
            id: import("zod").ZodString;
            name: import("zod").ZodString;
            type: import("zod").ZodEffects<import("zod").ZodType<1 | 4 | 3 | -1 | 2 | 5, import("zod").ZodTypeDef, 1 | 4 | 3 | -1 | 2 | 5>, 1 | 4 | 3 | -1 | 2 | 5, unknown>;
            price: import("zod").ZodObject<{
                amount: import("zod").ZodNumber;
                currency: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                amount: number;
                currency: string;
            }, {
                amount: number;
                currency: string;
            }>;
            application_id: import("zod").ZodString;
            flags: import("zod").ZodNumber;
            release_date: import("zod").ZodNullable<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            type: 1 | 4 | 3 | -1 | 2 | 5;
            id: string;
            name: string;
            flags: number;
            application_id: string;
            price: {
                amount: number;
                currency: string;
            };
            release_date: string | null;
        }, {
            id: string;
            name: string;
            flags: number;
            application_id: string;
            price: {
                amount: number;
                currency: string;
            };
            release_date: string | null;
            type?: unknown;
        }>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        skus: {
            type: 1 | 4 | 3 | -1 | 2 | 5;
            id: string;
            name: string;
            flags: number;
            application_id: string;
            price: {
                amount: number;
                currency: string;
            };
            release_date: string | null;
        }[];
    }, {
        skus: {
            id: string;
            name: string;
            flags: number;
            application_id: string;
            price: {
                amount: number;
                currency: string;
            };
            release_date: string | null;
            type?: unknown;
        }[];
    }>>>;
    openExternalLink: (args: import("./openExternalLink").OpenExternalLinkInput) => Promise<import("zod").TypeOf<import("zod").ZodNullable<import("zod").ZodObject<{}, "strip", import("zod").ZodTypeAny, {}, {}>>>>;
    openInviteDialog: (args: void) => Promise<import("zod").TypeOf<import("zod").ZodNullable<import("zod").ZodObject<{}, "strip", import("zod").ZodTypeAny, {}, {}>>>>;
    openShareMomentDialog: (args: {
        mediaUrl: string;
    }) => Promise<{} | null | undefined>;
    setActivity: (args: import("./setActivity").SetActivityInput) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        name: import("zod").ZodString;
        type: import("zod").ZodNumber;
        url: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        created_at: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
        timestamps: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
            start: import("zod").ZodOptional<import("zod").ZodNumber>;
            end: import("zod").ZodOptional<import("zod").ZodNumber>;
        }, "strip", import("zod").ZodTypeAny, {
            start?: number | undefined;
            end?: number | undefined;
        }, {
            start?: number | undefined;
            end?: number | undefined;
        }>>>;
        application_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        details: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        state: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        emoji: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
            id: import("zod").ZodString;
            name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            roles: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>>;
            user: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
                id: import("zod").ZodString;
                username: import("zod").ZodString;
                discriminator: import("zod").ZodString;
                global_name: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
                avatar_decoration_data: import("zod").ZodNullable<import("zod").ZodObject<{
                    asset: import("zod").ZodString;
                    sku_id: import("zod").ZodOptional<import("zod").ZodString>;
                }, "strip", import("zod").ZodTypeAny, {
                    asset: string;
                    sku_id?: string | undefined;
                }, {
                    asset: string;
                    sku_id?: string | undefined;
                }>>;
                bot: import("zod").ZodBoolean;
                flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
                premium_type: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
            }, "strip", import("zod").ZodTypeAny, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }, {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            }>>>;
            require_colons: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
            managed: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
            animated: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
            available: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
        }, "strip", import("zod").ZodTypeAny, {
            id: string;
            user?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            name?: string | null | undefined;
            roles?: string[] | null | undefined;
            require_colons?: boolean | null | undefined;
            managed?: boolean | null | undefined;
            animated?: boolean | null | undefined;
            available?: boolean | null | undefined;
        }, {
            id: string;
            user?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            name?: string | null | undefined;
            roles?: string[] | null | undefined;
            require_colons?: boolean | null | undefined;
            managed?: boolean | null | undefined;
            animated?: boolean | null | undefined;
            available?: boolean | null | undefined;
        }>>>;
        party: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
            id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
            size: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodNumber, "many">>>;
        }, "strip", import("zod").ZodTypeAny, {
            id?: string | null | undefined;
            size?: number[] | null | undefined;
        }, {
            id?: string | null | undefined;
            size?: number[] | null | undefined;
        }>>>;
        assets: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
            large_image: import("zod").ZodOptional<import("zod").ZodNullable<import("zod").ZodString>>;
            large_text: import("zod").ZodOptional<import("zod").ZodNullable<import("zod").ZodString>>;
            small_image: import("zod").ZodOptional<import("zod").ZodNullable<import("zod").ZodString>>;
            small_text: import("zod").ZodOptional<import("zod").ZodNullable<import("zod").ZodString>>;
        }, "strip", import("zod").ZodTypeAny, {
            large_image?: string | null | undefined;
            large_text?: string | null | undefined;
            small_image?: string | null | undefined;
            small_text?: string | null | undefined;
        }, {
            large_image?: string | null | undefined;
            large_text?: string | null | undefined;
            small_image?: string | null | undefined;
            small_text?: string | null | undefined;
        }>>>;
        secrets: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodObject<{
            join: import("zod").ZodOptional<import("zod").ZodString>;
            match: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            join?: string | undefined;
            match?: string | undefined;
        }, {
            join?: string | undefined;
            match?: string | undefined;
        }>>>;
        instance: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
        flags: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodNumber>>;
    }, "strip", import("zod").ZodTypeAny, {
        type: number;
        name: string;
        flags?: number | null | undefined;
        url?: string | null | undefined;
        created_at?: number | null | undefined;
        timestamps?: {
            start?: number | undefined;
            end?: number | undefined;
        } | null | undefined;
        application_id?: string | null | undefined;
        details?: string | null | undefined;
        state?: string | null | undefined;
        emoji?: {
            id: string;
            user?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            name?: string | null | undefined;
            roles?: string[] | null | undefined;
            require_colons?: boolean | null | undefined;
            managed?: boolean | null | undefined;
            animated?: boolean | null | undefined;
            available?: boolean | null | undefined;
        } | null | undefined;
        party?: {
            id?: string | null | undefined;
            size?: number[] | null | undefined;
        } | null | undefined;
        assets?: {
            large_image?: string | null | undefined;
            large_text?: string | null | undefined;
            small_image?: string | null | undefined;
            small_text?: string | null | undefined;
        } | null | undefined;
        secrets?: {
            join?: string | undefined;
            match?: string | undefined;
        } | null | undefined;
        instance?: boolean | null | undefined;
    }, {
        type: number;
        name: string;
        flags?: number | null | undefined;
        url?: string | null | undefined;
        created_at?: number | null | undefined;
        timestamps?: {
            start?: number | undefined;
            end?: number | undefined;
        } | null | undefined;
        application_id?: string | null | undefined;
        details?: string | null | undefined;
        state?: string | null | undefined;
        emoji?: {
            id: string;
            user?: {
                username: string;
                discriminator: string;
                id: string;
                bot: boolean;
                avatar_decoration_data: {
                    asset: string;
                    sku_id?: string | undefined;
                } | null;
                avatar?: string | null | undefined;
                global_name?: string | null | undefined;
                flags?: number | null | undefined;
                premium_type?: number | null | undefined;
            } | null | undefined;
            name?: string | null | undefined;
            roles?: string[] | null | undefined;
            require_colons?: boolean | null | undefined;
            managed?: boolean | null | undefined;
            animated?: boolean | null | undefined;
            available?: boolean | null | undefined;
        } | null | undefined;
        party?: {
            id?: string | null | undefined;
            size?: number[] | null | undefined;
        } | null | undefined;
        assets?: {
            large_image?: string | null | undefined;
            large_text?: string | null | undefined;
            small_image?: string | null | undefined;
            small_text?: string | null | undefined;
        } | null | undefined;
        secrets?: {
            join?: string | undefined;
            match?: string | undefined;
        } | null | undefined;
        instance?: boolean | null | undefined;
    }>>>;
    setConfig: (args: import("./setConfig").SetConfigInput) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        use_interactive_pip: import("zod").ZodBoolean;
    }, "strip", import("zod").ZodTypeAny, {
        use_interactive_pip: boolean;
    }, {
        use_interactive_pip: boolean;
    }>>>;
    setOrientationLockState: (args: import("./setOrientationLockState").SetOrientationLockStateInput) => Promise<import("zod").TypeOf<import("zod").ZodNullable<import("zod").ZodObject<{}, "strip", import("zod").ZodTypeAny, {}, {}>>>>;
    startPurchase: (args: import("./startPurchase").StartPurchaseInput) => Promise<import("zod").TypeOf<import("zod").ZodNullable<import("zod").ZodArray<import("zod").ZodObject<{
        id: import("zod").ZodString;
        sku_id: import("zod").ZodString;
        application_id: import("zod").ZodString;
        user_id: import("zod").ZodString;
        gift_code_flags: import("zod").ZodNumber;
        type: import("zod").ZodEffects<import("zod").ZodType<1 | 4 | 3 | -1 | 2 | 5 | 6 | 7, import("zod").ZodTypeDef, 1 | 4 | 3 | -1 | 2 | 5 | 6 | 7>, 1 | 4 | 3 | -1 | 2 | 5 | 6 | 7, unknown>;
        gifter_user_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        branches: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>>;
        starts_at: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        ends_at: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        parent_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
        consumed: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
        deleted: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodBoolean>>;
        gift_code_batch_id: import("zod").ZodNullable<import("zod").ZodOptional<import("zod").ZodString>>;
    }, "strip", import("zod").ZodTypeAny, {
        type: 1 | 4 | 3 | -1 | 2 | 5 | 6 | 7;
        id: string;
        sku_id: string;
        user_id: string;
        application_id: string;
        gift_code_flags: number;
        parent_id?: string | null | undefined;
        gifter_user_id?: string | null | undefined;
        branches?: string[] | null | undefined;
        starts_at?: string | null | undefined;
        ends_at?: string | null | undefined;
        consumed?: boolean | null | undefined;
        deleted?: boolean | null | undefined;
        gift_code_batch_id?: string | null | undefined;
    }, {
        id: string;
        sku_id: string;
        user_id: string;
        application_id: string;
        gift_code_flags: number;
        type?: unknown;
        parent_id?: string | null | undefined;
        gifter_user_id?: string | null | undefined;
        branches?: string[] | null | undefined;
        starts_at?: string | null | undefined;
        ends_at?: string | null | undefined;
        consumed?: boolean | null | undefined;
        deleted?: boolean | null | undefined;
        gift_code_batch_id?: string | null | undefined;
    }>, "many">>>>;
    userSettingsGetLocale: (args: void) => Promise<import("zod").TypeOf<import("zod").ZodObject<{
        locale: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        locale: string;
    }, {
        locale: string;
    }>>>;
    initiateImageUpload: (args: void) => Promise<{
        image_url: string;
    }>;
    getInstanceConnectedParticipants: (args: void) => Promise<{
        participants: {
            username: string;
            discriminator: string;
            id: string;
            bot: boolean;
            flags: number;
            avatar?: string | null | undefined;
            global_name?: string | null | undefined;
            avatar_decoration_data?: {
                asset: string;
                skuId?: string | undefined;
            } | null | undefined;
            premium_type?: number | null | undefined;
            nickname?: string | undefined;
        }[];
    }>;
};
export default commands;
type Awaited<T> = T extends Promise<infer U> ? U : never;
export type CommandTypes = ReturnType<typeof commands>;
export type CommandResponseTypes = {
    [Name in keyof CommandTypes]: Awaited<ReturnType<CommandTypes[Name]>>;
};
export type CommandResponse<K extends keyof CommandTypes> = Awaited<ReturnType<CommandTypes[K]>>;
export type CommandInputTypes = {
    [Name in keyof CommandTypes]: Parameters<CommandTypes[Name]>;
};
export type CommandInput<K extends keyof CommandTypes> = Parameters<CommandTypes[K]>;
